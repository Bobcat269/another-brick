@model IEnumerable<PantryWebApp.Models.Ingredient>

@{
    ViewData["Title"] = "Index";
}

<h1>Ingredients</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Expiration)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td>
                @* @Html.DisplayFor(modelItem => item.Expiration) *@
                @* Display Expiration date in short form instead, adding a ternary in case the nullable field is null *@
                @* @Html.DisplayFor(modelItem => item.Expiration.HasValue ? item.Expiration.Value.ToShortDateString() : "") *@
                @* Doesnt Work, DisplayFor cannot display computed expressions  *@
                @item.Expiration?.ToShortDateString()
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
